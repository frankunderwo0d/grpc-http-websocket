// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.13.0
// source: proto/AService.proto

package proto

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Method int32

const (
	Method_Get    Method = 0
	Method_Post   Method = 1
	Method_Option Method = 2
	Method_Delete Method = 3
)

// Enum value maps for Method.
var (
	Method_name = map[int32]string{
		0: "Get",
		1: "Post",
		2: "Option",
		3: "Delete",
	}
	Method_value = map[string]int32{
		"Get":    0,
		"Post":   1,
		"Option": 2,
		"Delete": 3,
	}
)

func (x Method) Enum() *Method {
	p := new(Method)
	*p = x
	return p
}

func (x Method) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Method) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_AService_proto_enumTypes[0].Descriptor()
}

func (Method) Type() protoreflect.EnumType {
	return &file_proto_AService_proto_enumTypes[0]
}

func (x Method) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Method.Descriptor instead.
func (Method) EnumDescriptor() ([]byte, []int) {
	return file_proto_AService_proto_rawDescGZIP(), []int{0}
}

type Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path    string            `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`                                                                                               // 请求路径
	Method  Method            `protobuf:"varint,2,opt,name=method,proto3,enum=proto.Method" json:"method,omitempty"`                                                                        // 请求方法
	Headers map[string]string `protobuf:"bytes,3,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // 请求头
	Params  map[string]string `protobuf:"bytes,4,rep,name=params,proto3" json:"params,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`   // 请求体
}

func (x *Request) Reset() {
	*x = Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_AService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request) ProtoMessage() {}

func (x *Request) ProtoReflect() protoreflect.Message {
	mi := &file_proto_AService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request.ProtoReflect.Descriptor instead.
func (*Request) Descriptor() ([]byte, []int) {
	return file_proto_AService_proto_rawDescGZIP(), []int{0}
}

func (x *Request) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *Request) GetMethod() Method {
	if x != nil {
		return x.Method
	}
	return Method_Get
}

func (x *Request) GetHeaders() map[string]string {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *Request) GetParams() map[string]string {
	if x != nil {
		return x.Params
	}
	return nil
}

type Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusCode int64  `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"` // 状态码
	StatusMsg  string `protobuf:"bytes,2,opt,name=status_msg,json=statusMsg,proto3" json:"status_msg,omitempty"`     // 状态语句
	Data       []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`                                // 响应数据
}

func (x *Response) Reset() {
	*x = Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_AService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_proto_AService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_proto_AService_proto_rawDescGZIP(), []int{1}
}

func (x *Response) GetStatusCode() int64 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *Response) GetStatusMsg() string {
	if x != nil {
		return x.StatusMsg
	}
	return ""
}

func (x *Response) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_proto_AService_proto protoreflect.FileDescriptor

var file_proto_AService_proto_rawDesc = []byte{
	0x0a, 0x14, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x41, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa6, 0x02,
	0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x25, 0x0a,
	0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x06, 0x6d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x12, 0x35, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x32, 0x0a, 0x06, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a,
	0x3a, 0x0a, 0x0c, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x39, 0x0a, 0x0b, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x5e, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x6d, 0x73,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d,
	0x73, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x2a, 0x33, 0x0a, 0x06, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x12, 0x07, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x50, 0x6f, 0x73,
	0x74, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0x02, 0x12,
	0x0a, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x10, 0x03, 0x32, 0xdb, 0x01, 0x0a, 0x08,
	0x41, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x2f, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x46,
	0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x32, 0x0a, 0x0b, 0x4c, 0x69, 0x73,
	0x74, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x34, 0x0a,
	0x0d, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x0e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x28, 0x01, 0x12, 0x34, 0x0a, 0x0b, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x43, 0x68,
	0x61, 0x74, 0x12, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x42, 0x0e, 0x5a, 0x0c, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_proto_AService_proto_rawDescOnce sync.Once
	file_proto_AService_proto_rawDescData = file_proto_AService_proto_rawDesc
)

func file_proto_AService_proto_rawDescGZIP() []byte {
	file_proto_AService_proto_rawDescOnce.Do(func() {
		file_proto_AService_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_AService_proto_rawDescData)
	})
	return file_proto_AService_proto_rawDescData
}

var file_proto_AService_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_AService_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_proto_AService_proto_goTypes = []interface{}{
	(Method)(0),      // 0: proto.Method
	(*Request)(nil),  // 1: proto.Request
	(*Response)(nil), // 2: proto.Response
	nil,              // 3: proto.Request.HeadersEntry
	nil,              // 4: proto.Request.ParamsEntry
}
var file_proto_AService_proto_depIdxs = []int32{
	0, // 0: proto.Request.method:type_name -> proto.Method
	3, // 1: proto.Request.headers:type_name -> proto.Request.HeadersEntry
	4, // 2: proto.Request.params:type_name -> proto.Request.ParamsEntry
	1, // 3: proto.AService.GetFeature:input_type -> proto.Request
	1, // 4: proto.AService.ListFeature:input_type -> proto.Request
	1, // 5: proto.AService.RecordFeature:input_type -> proto.Request
	1, // 6: proto.AService.FeatureChat:input_type -> proto.Request
	2, // 7: proto.AService.GetFeature:output_type -> proto.Response
	2, // 8: proto.AService.ListFeature:output_type -> proto.Response
	2, // 9: proto.AService.RecordFeature:output_type -> proto.Response
	2, // 10: proto.AService.FeatureChat:output_type -> proto.Response
	7, // [7:11] is the sub-list for method output_type
	3, // [3:7] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_proto_AService_proto_init() }
func file_proto_AService_proto_init() {
	if File_proto_AService_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_AService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_AService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_AService_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_AService_proto_goTypes,
		DependencyIndexes: file_proto_AService_proto_depIdxs,
		EnumInfos:         file_proto_AService_proto_enumTypes,
		MessageInfos:      file_proto_AService_proto_msgTypes,
	}.Build()
	File_proto_AService_proto = out.File
	file_proto_AService_proto_rawDesc = nil
	file_proto_AService_proto_goTypes = nil
	file_proto_AService_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// AServiceClient is the client API for AService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AServiceClient interface {
	// 1.简单的rpc请求
	GetFeature(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	// 2.服务器端流式rpc
	ListFeature(ctx context.Context, in *Request, opts ...grpc.CallOption) (AService_ListFeatureClient, error)
	// 3.客户端流式rpc
	RecordFeature(ctx context.Context, opts ...grpc.CallOption) (AService_RecordFeatureClient, error)
	// 4.双向流式RPC
	FeatureChat(ctx context.Context, opts ...grpc.CallOption) (AService_FeatureChatClient, error)
}

type aServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewAServiceClient(cc grpc.ClientConnInterface) AServiceClient {
	return &aServiceClient{cc}
}

func (c *aServiceClient) GetFeature(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/proto.AService/GetFeature", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aServiceClient) ListFeature(ctx context.Context, in *Request, opts ...grpc.CallOption) (AService_ListFeatureClient, error) {
	stream, err := c.cc.NewStream(ctx, &_AService_serviceDesc.Streams[0], "/proto.AService/ListFeature", opts...)
	if err != nil {
		return nil, err
	}
	x := &aServiceListFeatureClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type AService_ListFeatureClient interface {
	Recv() (*Response, error)
	grpc.ClientStream
}

type aServiceListFeatureClient struct {
	grpc.ClientStream
}

func (x *aServiceListFeatureClient) Recv() (*Response, error) {
	m := new(Response)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *aServiceClient) RecordFeature(ctx context.Context, opts ...grpc.CallOption) (AService_RecordFeatureClient, error) {
	stream, err := c.cc.NewStream(ctx, &_AService_serviceDesc.Streams[1], "/proto.AService/RecordFeature", opts...)
	if err != nil {
		return nil, err
	}
	x := &aServiceRecordFeatureClient{stream}
	return x, nil
}

type AService_RecordFeatureClient interface {
	Send(*Request) error
	CloseAndRecv() (*Response, error)
	grpc.ClientStream
}

type aServiceRecordFeatureClient struct {
	grpc.ClientStream
}

func (x *aServiceRecordFeatureClient) Send(m *Request) error {
	return x.ClientStream.SendMsg(m)
}

func (x *aServiceRecordFeatureClient) CloseAndRecv() (*Response, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(Response)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *aServiceClient) FeatureChat(ctx context.Context, opts ...grpc.CallOption) (AService_FeatureChatClient, error) {
	stream, err := c.cc.NewStream(ctx, &_AService_serviceDesc.Streams[2], "/proto.AService/FeatureChat", opts...)
	if err != nil {
		return nil, err
	}
	x := &aServiceFeatureChatClient{stream}
	return x, nil
}

type AService_FeatureChatClient interface {
	Send(*Request) error
	Recv() (*Response, error)
	grpc.ClientStream
}

type aServiceFeatureChatClient struct {
	grpc.ClientStream
}

func (x *aServiceFeatureChatClient) Send(m *Request) error {
	return x.ClientStream.SendMsg(m)
}

func (x *aServiceFeatureChatClient) Recv() (*Response, error) {
	m := new(Response)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// AServiceServer is the server API for AService service.
type AServiceServer interface {
	// 1.简单的rpc请求
	GetFeature(context.Context, *Request) (*Response, error)
	// 2.服务器端流式rpc
	ListFeature(*Request, AService_ListFeatureServer) error
	// 3.客户端流式rpc
	RecordFeature(AService_RecordFeatureServer) error
	// 4.双向流式RPC
	FeatureChat(AService_FeatureChatServer) error
}

// UnimplementedAServiceServer can be embedded to have forward compatible implementations.
type UnimplementedAServiceServer struct {
}

func (*UnimplementedAServiceServer) GetFeature(context.Context, *Request) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetFeature not implemented")
}
func (*UnimplementedAServiceServer) ListFeature(*Request, AService_ListFeatureServer) error {
	return status.Errorf(codes.Unimplemented, "method ListFeature not implemented")
}
func (*UnimplementedAServiceServer) RecordFeature(AService_RecordFeatureServer) error {
	return status.Errorf(codes.Unimplemented, "method RecordFeature not implemented")
}
func (*UnimplementedAServiceServer) FeatureChat(AService_FeatureChatServer) error {
	return status.Errorf(codes.Unimplemented, "method FeatureChat not implemented")
}

func RegisterAServiceServer(s *grpc.Server, srv AServiceServer) {
	s.RegisterService(&_AService_serviceDesc, srv)
}

func _AService_GetFeature_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AServiceServer).GetFeature(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.AService/GetFeature",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AServiceServer).GetFeature(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _AService_ListFeature_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Request)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(AServiceServer).ListFeature(m, &aServiceListFeatureServer{stream})
}

type AService_ListFeatureServer interface {
	Send(*Response) error
	grpc.ServerStream
}

type aServiceListFeatureServer struct {
	grpc.ServerStream
}

func (x *aServiceListFeatureServer) Send(m *Response) error {
	return x.ServerStream.SendMsg(m)
}

func _AService_RecordFeature_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(AServiceServer).RecordFeature(&aServiceRecordFeatureServer{stream})
}

type AService_RecordFeatureServer interface {
	SendAndClose(*Response) error
	Recv() (*Request, error)
	grpc.ServerStream
}

type aServiceRecordFeatureServer struct {
	grpc.ServerStream
}

func (x *aServiceRecordFeatureServer) SendAndClose(m *Response) error {
	return x.ServerStream.SendMsg(m)
}

func (x *aServiceRecordFeatureServer) Recv() (*Request, error) {
	m := new(Request)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _AService_FeatureChat_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(AServiceServer).FeatureChat(&aServiceFeatureChatServer{stream})
}

type AService_FeatureChatServer interface {
	Send(*Response) error
	Recv() (*Request, error)
	grpc.ServerStream
}

type aServiceFeatureChatServer struct {
	grpc.ServerStream
}

func (x *aServiceFeatureChatServer) Send(m *Response) error {
	return x.ServerStream.SendMsg(m)
}

func (x *aServiceFeatureChatServer) Recv() (*Request, error) {
	m := new(Request)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _AService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.AService",
	HandlerType: (*AServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetFeature",
			Handler:    _AService_GetFeature_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ListFeature",
			Handler:       _AService_ListFeature_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "RecordFeature",
			Handler:       _AService_RecordFeature_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "FeatureChat",
			Handler:       _AService_FeatureChat_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "proto/AService.proto",
}
